#N canvas 408 220 733 733 12;
#N canvas 822 126 774 534 more-settings 0;
#X msg 267 419 print;
#X obj 50 118 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 50 138 interpolate \$1;
#X obj 123 185 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 123 205 compute \$1;
#X obj 50 483 outlet;
#X msg 190 281 getAlgoSettings;
#X msg 236 359 getParamsPerAlgo;
#X text 83 31 The object has an internal 4-point cubic interpolation
function to smooth out signal. This is especially useful at slow tempos
\, and often sounds as if the signal has been low-pass filtered. The
default state has interpolation active. Turn it off for a more harsh
and raw bytebeat sound.;
#X text 337 258 Report all internal settings as a list of 14 numbers:
10 parameters \, bit-depth \, tempo \, time \, and algorithm. Data
is sent out the 4th outlet. Use this information to save presets in
the patch or text files.;
#X text 383 350 Get the number of parameters used in the currently
selected algorithm., f 37;
#X text 340 419 Print all internal settings in the Pd console.;
#X text 225 170 Turn algorithm output computation on/off. Default state
is on. When computation is off \, silence is output from the signal
outlet and the internal time variable ceases to be incremented.;
#X connect 0 0 5 0;
#X connect 1 0 2 0;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 6 0 5 0;
#X connect 7 0 5 0;
#X restore 206 282 pd more-settings;
#X obj 282 440 bng 15 250 50 0 empty empty time-wraparound 17 7 0 12
-262144 -1 -1;
#X floatatom 201 645 20 1 32 1 t - -;
#X floatatom 268 617 20 1 32 1 mu - -;
#X floatatom 263 543 10 0 0 1 numParams - -;
#X obj 201 585 unpack f f;
#N canvas 228 377 365 302 volume 0;
#X obj 59 184 *~;
#X obj 59 226 dac~;
#X obj 109 184 dbtorms;
#X floatatom 109 122 5 0 100 1 dB - -;
#X obj 109 208 pack f 40;
#X obj 109 232 line~;
#X obj 156 37 loadbang;
#X obj 59 44 inlet~;
#X obj 229 100 loadbang;
#X msg 229 129 \; pd dsp 1 \;;
#X msg 156 61 60;
#X connect 0 0 1 0;
#X connect 0 0 1 1;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 5 0 0 1;
#X connect 6 0 10 0;
#X connect 7 0 0 0;
#X connect 8 0 9 0;
#X connect 10 0 3 0;
#X coords 0 -1 1 1 85 45 1 100 100;
#X restore 54 646 pd volume;
#N canvas 901 509 716 452 current-settings 0;
#X obj 51 32 inlet;
#X obj 51 56 list split 10;
#X obj 51 270 unpack f f f f f f f f f f;
#X floatatom 51 358 5 0 0 0 - - -;
#X floatatom 101 358 5 0 0 0 - - -;
#X floatatom 151 358 5 0 0 0 - - -;
#X floatatom 201 358 5 0 0 0 - - -;
#X floatatom 251 358 5 0 0 0 - - -;
#X floatatom 301 358 5 0 0 0 - - -;
#X floatatom 351 358 5 0 0 0 - - -;
#X floatatom 401 358 5 0 0 0 - - -;
#X floatatom 451 358 5 0 0 0 - - -;
#X floatatom 501 358 5 0 0 0 - - -;
#X text 48 393 Parameters 0 - 9;
#X obj 139 117 unpack f f f f;
#X floatatom 139 181 5 0 0 3 bit-depth - -;
#X floatatom 229 181 5 0 0 3 tempo - -;
#X floatatom 319 181 15 0 0 3 time - -;
#X floatatom 489 181 5 0 0 3 algorithm - -;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 14 0;
#X connect 2 0 3 0;
#X connect 2 1 4 0;
#X connect 2 2 5 0;
#X connect 2 3 6 0;
#X connect 2 4 7 0;
#X connect 2 5 8 0;
#X connect 2 6 9 0;
#X connect 2 7 10 0;
#X connect 2 8 11 0;
#X connect 2 9 12 0;
#X connect 14 0 15 0;
#X connect 14 1 16 0;
#X connect 14 2 17 0;
#X connect 14 3 18 0;
#X restore 289 490 pd current-settings;
#N canvas 719 73 811 435 set-parameters 0;
#X floatatom 110 119 5 1 16384 0 - - -;
#X floatatom 160 119 5 1 16384 0 - - -;
#X obj 160 202 t b f;
#X floatatom 210 119 5 1 16384 0 - - -;
#X obj 210 202 t b f;
#X floatatom 260 119 5 1 16384 0 - - -;
#X obj 260 202 t b f;
#X obj 110 13 loadbang;
#X floatatom 310 119 5 1 16384 0 - - -;
#X obj 310 202 t b f;
#X floatatom 360 119 5 1 16384 0 - - -;
#X obj 360 202 t b f;
#X obj 110 74 unpack f f f f f f f f f f;
#X floatatom 410 119 5 1 16384 0 - - -;
#X obj 410 202 t b f;
#X floatatom 460 119 5 1 16384 0 - - -;
#X obj 460 202 t b f;
#X floatatom 510 119 5 1 16384 0 - - -;
#X obj 510 202 t b f;
#X floatatom 560 119 5 1 16384 0 - - -;
#X obj 560 202 t b f;
#X obj 110 286 list prepend parameters;
#X obj 110 310 list trim;
#X obj 110 262 pack f f f f f f f f f f;
#X obj 110 334 outlet;
#X msg 110 42 205 254 83 29 205 31 45 95 10 142;
#X text 311 280 Send a list of all 10 parameters via the "parameters"
message. Values should be between 1 and UINT_MAX. Note that the number
of parameters in a given algorithm varies between one and ten. When
the "algoChoice" message is received \, the object will automatically
report the number of parameters for the chosen algorithm at the 3rd
outlet. The "getParamsPerAlgo" will also produce this output.;
#X connect 0 0 23 0;
#X connect 1 0 2 0;
#X connect 2 0 23 0;
#X connect 2 1 23 1;
#X connect 3 0 4 0;
#X connect 4 0 23 0;
#X connect 4 1 23 2;
#X connect 5 0 6 0;
#X connect 6 0 23 0;
#X connect 6 1 23 3;
#X connect 7 0 25 0;
#X connect 8 0 9 0;
#X connect 9 0 23 0;
#X connect 9 1 23 4;
#X connect 10 0 11 0;
#X connect 11 0 23 0;
#X connect 11 1 23 5;
#X connect 12 0 0 0;
#X connect 12 1 1 0;
#X connect 12 2 3 0;
#X connect 12 3 5 0;
#X connect 12 4 8 0;
#X connect 12 5 10 0;
#X connect 12 6 13 0;
#X connect 12 7 15 0;
#X connect 12 8 17 0;
#X connect 12 9 19 0;
#X connect 13 0 14 0;
#X connect 14 0 23 0;
#X connect 14 1 23 6;
#X connect 15 0 16 0;
#X connect 16 0 23 0;
#X connect 16 1 23 7;
#X connect 17 0 18 0;
#X connect 18 0 23 0;
#X connect 18 1 23 8;
#X connect 19 0 20 0;
#X connect 20 0 23 0;
#X connect 20 1 23 9;
#X connect 21 0 22 0;
#X connect 22 0 24 0;
#X connect 23 0 21 0;
#X connect 25 0 12 0;
#X coords 0 -1 1 1 510 45 1 100 100;
#X restore 120 170 pd set-parameters;
#N canvas 310 128 861 471 get-and-set-time 0;
#X msg 159 73 0;
#X msg 100 36 getTimeIndex;
#X msg 159 169 setTimeIndex \$1;
#X msg 222 134 742816;
#X msg 182 105 1.00547e+06;
#X obj 100 396 outlet;
#X msg 304 289 setTimeRand;
#X msg 242 225 setInterpMu 0.5;
#X text 211 31 Poll the object to get the current time index and interpolation
mu from the 2nd outlet. This is useful for sync'ing one instance to
another.;
#X text 299 126 Set the current time index to any value between zero
and UINT_MAX., f 37;
#X text 383 215 In rare cases \, such as with an extremely slow tempo
\, you may also want to synchronize the inerpolation mu so that two
instances are more tightly in sync;
#X text 413 275 The internal time variable in this object is an unsigned
int. Pd's [random] uses floating point numbers and cannot produce random
numbers large enough to accomodate that range. Instead \, use this
method to have the object choose its own random time internally.,
f 50;
#X connect 0 0 2 0;
#X connect 1 0 5 0;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 6 0 5 0;
#X connect 7 0 5 0;
#X restore 164 238 pd get-and-set-time;
#N canvas 895 120 554 474 main-settings 0;
#X floatatom 70 165 5 1 240 1 tempo - -;
#X floatatom 70 195 5 1 32 1 bit-depth - -;
#X msg 270 282 algoChoice \$1;
#X obj 130 24 loadbang;
#X obj 70 406 outlet;
#X floatatom 70 135 5 0 112 1 algorithm - -;
#X obj 130 77 unpack f f f;
#X msg 70 282 bitDepth \$1;
#X msg 170 282 tempo \$1;
#X msg 130 53 58 240 8;
#X text 241 126 Change the active algorithm (0-112) \, tempo (1-240)
\, and bit-depth (1-32) via the "algoChoice" \, "tempo" \, and "bitDepth"
messages, f 37;
#X connect 0 0 8 0;
#X connect 1 0 7 0;
#X connect 2 0 4 0;
#X connect 3 0 9 0;
#X connect 5 0 2 0;
#X connect 6 0 5 0;
#X connect 6 1 0 0;
#X connect 6 2 1 0;
#X connect 7 0 4 0;
#X connect 8 0 4 0;
#X connect 9 0 6 0;
#X coords 0 -1 1 1 125 110 1 65 110;
#X restore 54 43 pd main-settings;
#X obj 54 598 hip~ 3;
#N canvas 0 23 450 300 plotting 0;
#X obj 66 18 inlet~;
#X obj 66 212 outlet~;
#X obj 201 105 f;
#X obj 271 89 + 1;
#X obj 271 113 % 8;
#X obj 201 129 select 0;
#X obj 201 65 bang~;
#X obj 201 195 tabwrite~ \$0-plot;
#X connect 0 0 1 0;
#X connect 0 0 7 0;
#X connect 2 0 3 0;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 4 0 2 1;
#X connect 5 0 7 0;
#X connect 6 0 2 0;
#X restore 54 561 pd plotting;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-plot 512 float 0;
#X coords 0 1 512 -1 200 140 1;
#X restore 479 490 graph;
#X obj 1 1 cnv 10 300 10 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 1 1 cnv 10 10 300 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 545 689 William Brent \, 2020;
#X text 371 243 Explore the possibilities by trying various algorithms
\, bit-depths \, and tempi \, while tuning the available parameters.
This external was written as part of the OUTPUT project \, which allows
networked laptop players to freely improvise with synchronized bytebeat
patterns., f 44;
#X text 371 363 NOTE: because the raw output of bytebeat algorithms
can have intense DC offsets \, a high-pass filter is recommended,
f 44;
#X obj 54 354 OUTPUT~;
#X text 545 669 [OUTPUT~];
#X text 206 24 [OUTPUT~] crunches the output of algorithmic "bytebeat"
code to produce signal. Although bytebeat algorithms can be explored
in Pd natively using [expr~] or even bitwise operation control objects
\, there are some advantages to implementing them in an external. For
instance \, Pd uses floating point precision for its data \, but greater
control is available using the unsigned int data type for an algorithm's
time variable and associated parameters. Different interpolation methods
can also be explored \, and the code can run more efficiently as an
external., f 69;
#X connect 0 0 19 0;
#X connect 5 0 2 0;
#X connect 5 1 3 0;
#X connect 8 0 19 0;
#X connect 9 0 19 0;
#X connect 10 0 19 0;
#X connect 11 0 6 0;
#X connect 12 0 11 0;
#X connect 19 0 12 0;
#X connect 19 1 5 0;
#X connect 19 2 4 0;
#X connect 19 3 7 0;
#X connect 19 4 1 0;
