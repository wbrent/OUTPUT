#N canvas 165 385 646 426 10;
#X obj 50 329 *~;
#X obj 319 189 dbtorms;
#X obj 319 211 pack f 40;
#X obj 319 233 line~;
#X obj 319 75 moses 41;
#X obj 319 97 t b;
#X msg 319 119 0;
#X obj 319 53 r player-\$1-gain;
#X text 434 81 \$1: player ID number;
#X obj 50 359 s~ player-\$1-output;
#X obj 319 160 min 100;
#X obj 50 228 hip~ 3;
#N canvas 1025 72 606 533 compressor 0;
#N canvas 0 50 450 250 (subpatch) 0;
#X array \$0-dynamic-curve 102 float 3;
#A 0 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92
93 94 95 95.95 96.8 97.55 98.2 98.75 99.2;
#X coords 0 100 102 0 202 200 1 0 0;
#X restore 289 32 graph;
#N canvas 296 23 600 997 parameters 0;
#X obj 366 32 inlet;
#X obj 487 83 s \$0-speed;
#X obj 366 222 s \$0-limit;
#X obj 392 198 s \$0-knee;
#X obj 415 174 s \$0-boost;
#X obj 439 147 s \$0-ratio;
#X obj 366 57 unpack 0 0 0 0 0 0;
#X obj 462 116 s \$0-thresh;
#X obj 50 91 r \$0-limit;
#X obj 61 116 r \$0-knee;
#X obj 70 143 r \$0-boost;
#X obj 96 196 r \$0-thresh;
#X obj 82 167 r \$0-ratio;
#X obj 50 224 b;
#X obj 50 249 del 0;
#X obj 50 274 t b b;
#X obj 50 324 until;
#X obj 50 349 f;
#X obj 87 351 + 1;
#X msg 99 325 0;
#X obj 50 374 t f f;
#X obj 24 870 tabwrite \$0-dynamic-curve;
#X obj 193 708 moses;
#X obj 240 706 r \$0-thresh;
#X obj 407 554 r \$0-ratio;
#X obj 407 579 f;
#X obj 407 604 / 100;
#X obj 18 808 +;
#X msg 225 734 0;
#X obj 193 765 expr ($f1-$f2)*$f3;
#X obj 18 833 max 0;
#X obj 407 629 - 1;
#X obj 48 404 +;
#X obj 218 361 r \$0-boost;
#X obj 193 452 r \$0-limit;
#X obj 151 455 f;
#X obj 151 480 -;
#X obj 48 429 t f b;
#X obj 327 428 r \$0-knee;
#X obj 188 535 +;
#X obj 144 535 -;
#X obj 23 569 moses;
#X obj 71 569 moses;
#X obj 102 601 b;
#X obj 195 611 r \$0-limit;
#X obj 102 626 f;
#X obj 302 829 expr $f4 - ($f2-$f1)*($f2-$f1)/(4*$f3);
#X obj 23 594 +;
#X msg 50 299 102;
#X obj 327 453 f;
#X obj 327 478 / 2;
#X connect 0 0 6 0;
#X connect 6 0 2 0;
#X connect 6 1 3 0;
#X connect 6 2 4 0;
#X connect 6 3 5 0;
#X connect 6 4 7 0;
#X connect 6 5 1 0;
#X connect 8 0 13 0;
#X connect 9 0 13 0;
#X connect 10 0 13 0;
#X connect 11 0 13 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 15 0 48 0;
#X connect 15 1 19 0;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 17 0 20 0;
#X connect 18 0 17 1;
#X connect 19 0 17 1;
#X connect 20 0 32 0;
#X connect 20 1 21 1;
#X connect 20 1 22 0;
#X connect 22 0 29 0;
#X connect 22 1 28 0;
#X connect 23 0 22 1;
#X connect 23 0 29 1;
#X connect 24 0 25 0;
#X connect 25 0 26 0;
#X connect 26 0 31 0;
#X connect 27 0 30 0;
#X connect 28 0 27 1;
#X connect 29 0 27 1;
#X connect 30 0 21 0;
#X connect 31 0 29 2;
#X connect 32 0 37 0;
#X connect 33 0 32 1;
#X connect 33 0 36 1;
#X connect 33 0 47 1;
#X connect 34 0 35 1;
#X connect 35 0 36 0;
#X connect 36 0 39 0;
#X connect 36 0 40 0;
#X connect 37 0 41 0;
#X connect 37 1 35 0;
#X connect 38 0 49 0;
#X connect 39 0 42 1;
#X connect 39 0 46 1;
#X connect 40 0 41 1;
#X connect 41 0 47 0;
#X connect 41 1 42 0;
#X connect 42 0 46 0;
#X connect 42 1 43 0;
#X connect 43 0 45 0;
#X connect 44 0 45 1;
#X connect 44 0 46 3;
#X connect 45 0 27 0;
#X connect 46 0 27 0;
#X connect 47 0 27 0;
#X connect 48 0 16 0;
#X connect 49 0 50 0;
#X connect 50 0 40 1;
#X connect 50 0 39 1;
#X connect 50 0 46 2;
#X restore 303 432 pd parameters;
#N canvas 354 210 617 518 run-compander 0;
#X obj 47 56 inlet~;
#X obj 83 134 slop~ 0 0 0 0 1e+09;
#X obj 160 32 r \$0-speed;
#X obj 160 57 f;
#X obj 160 82 / 10;
#X obj 83 98 abs~;
#X obj 111 252 tabread4~ \$0-dynamic-curve;
#X obj 80 294 -~;
#X obj 80 319 +~ 100;
#X obj 80 344 dbtorms~;
#X obj 81 222 rmstodb~;
#X obj 45 384 *~;
#X obj 45 409 outlet~;
#X text 145 288 "correct" the level by applying a gain calculated from
the difference between the measured and desired level, f 27;
#X connect 0 0 5 0;
#X connect 0 0 11 0;
#X connect 1 0 10 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 1 3;
#X connect 5 0 1 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 11 1;
#X connect 10 0 7 1;
#X connect 10 0 6 0;
#X connect 11 0 12 0;
#X restore 48 172 pd run-compander;
#X obj 48 193 outlet~;
#X obj 48 123 inlet~;
#X obj 303 362 loadbang;
#X msg 303 389 100 10 0 100 0 50;
#X connect 2 0 3 0;
#X connect 4 0 2 0;
#X connect 5 0 6 0;
#X connect 6 0 1 0;
#X restore 50 250 pd compressor;
#N canvas 569 392 706 288 time-sync 0;
#X obj 91 55 time-sync-req-abs 0 \$1;
#X obj 91 85 time-sync-req-abs 1 \$1;
#X obj 91 115 time-sync-req-abs 2 \$1;
#X obj 91 145 time-sync-req-abs 3 \$1;
#X obj 91 175 time-sync-req-abs 4 \$1;
#X obj 91 205 time-sync-req-abs 5 \$1;
#X text 293 55 Need to do some testing to see if time request "get"
from player A is only getting to player B for a "set". Is there crosstalk
going on here?;
#X text 293 135 Also: should probably make a method to set x->x_sampIdx
in [outputAlgo~] \, and set it to 0.0. An alternative is to switch
interpolation off (which sets x->x_mu to 0.0) \, and then back on again
in the next block.;
#X restore 434 156 pd time-sync;
#N canvas 316 108 450 300 tempo-sync 0;
#X obj 91 55 tempo-sync-req-abs 0 \$1;
#X obj 91 85 tempo-sync-req-abs 1 \$1;
#X obj 91 115 tempo-sync-req-abs 2 \$1;
#X obj 91 145 tempo-sync-req-abs 3 \$1;
#X obj 91 175 tempo-sync-req-abs 4 \$1;
#X obj 91 205 tempo-sync-req-abs 5 \$1;
#X restore 434 126 pd tempo-sync;
#N canvas 52 252 843 612 sub-block 0;
#X obj 367 21 r masterBlockSize;
#X msg 367 42 set \$1 1 1;
#X obj 367 63 block~ 2048 1 1;
#X obj 70 380 outlet~;
#N canvas 352 409 741 605 settings 0;
#X obj 168 159 r player-\$1-algo-select;
#X msg 230 277 bitDepth \$1;
#X msg 420 245 tempo \$1;
#X obj 64 522 outlet;
#X msg 465 360 interpolate \$1;
#X msg 520 413 compute \$1;
#X obj 520 390 r player-\$1-compute;
#X obj 230 253 r player-\$1-bitDepth;
#X obj 465 337 r player-\$1-interpolation;
#X msg 392 532 print;
#X obj 392 486 r all-player-print;
#X msg 64 62 getAlgoSettings;
#X obj 64 39 r player-\$1-get-algo-settings;
#X msg 114 132 save \$1;
#X obj 168 201 list prepend algo;
#X obj 168 222 list trim;
#X obj 168 180 text get outputAlgorithms;
#X msg 293 397 algo \$1;
#X obj 420 111 r player-\$1-tempo;
#X obj 420 142 +;
#X obj 460 138 r player-\$1-pitch-bend-final;
#X obj 460 159 t b f;
#X obj 420 193 max 1;
#X obj 420 214 min 240;
#X obj 114 89 r player-\$1-save-preset;
#X obj 114 110 symbol;
#X obj 293 356 r player-\$1-algo-direct;
#X obj 293 377 symbol;
#X obj 512 245 s player-\$1-tempo-final;
#X connect 0 0 16 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 4 0 3 0;
#X connect 5 0 3 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X connect 8 0 4 0;
#X connect 9 0 3 0;
#X connect 10 0 9 0;
#X connect 11 0 3 0;
#X connect 12 0 11 0;
#X connect 13 0 3 0;
#X connect 14 0 15 0;
#X connect 15 0 3 0;
#X connect 16 0 14 0;
#X connect 17 0 3 0;
#X connect 18 0 19 0;
#X connect 19 0 22 0;
#X connect 20 0 21 0;
#X connect 21 0 19 0;
#X connect 21 1 19 1;
#X connect 22 0 23 0;
#X connect 23 0 2 0;
#X connect 23 0 28 0;
#X connect 24 0 25 0;
#X connect 25 0 13 0;
#X connect 26 0 27 0;
#X connect 27 0 17 0;
#X restore 70 62 pd settings;
#N canvas 711 77 754 594 getSetTime 0;
#X obj 67 443 outlet;
#X msg 348 363 getTimeIndex;
#X obj 35 31 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 348 336 bang~;
#X text 396 336 always poll time so that it can be stored on client
;
#X msg 67 95 setTimeIndex \$1 \$2;
#X obj 157 51 r player-\$1-set-interp-mu;
#X obj 67 51 pack f f;
#X obj 346 155 r player-\$1-loop-point-start;
#X obj 346 276 pack f f;
#X obj 426 246 t b f;
#X obj 426 185 r player-\$1-loop-point-end;
#X msg 346 310 setTimeLoopPoints \$1 \$2;
#X obj 346 176 * 60;
#X obj 346 197 * 44100;
#X obj 426 206 * 60;
#X obj 426 227 * 44100;
#X msg 344 490 timeDirection \$1;
#X obj 344 409 r player-\$1-time-reverse;
#X obj 344 430 select 0 1;
#X msg 344 451 1;
#X msg 394 451 -1;
#X obj 67 30 r player-\$1-time-index;
#N canvas 627 154 500 412 set-time-random 0;
#X obj 40 34 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 72 33 r player-\$1-set-time-random;
#X msg 375 158 setTimeRand;
#X obj 72 54 t b b;
#X obj 72 277 s player-\$1-time-sync;
#X obj 72 257 f \$1;
#X obj 214 151 r masterBlockSize;
#X obj 214 172 + 1;
#X obj 175 192 t f b;
#X obj 205 213 samplerate~;
#X obj 175 213 /;
#X obj 175 234 * 1000;
#X obj 175 172 f;
#X obj 72 229 delay;
#X obj 375 306 outlet;
#X text 69 308 request a time sync to itself after setting the random
time so that the client side is updated with the randomly generated
time on the master side. must wait one sample more than a block before
updating though \, to give the random time a chance to be set on the
current DSP block., f 43;
#X connect 1 0 0 0;
#X connect 1 0 3 0;
#X connect 2 0 14 0;
#X connect 3 0 13 0;
#X connect 3 1 2 0;
#X connect 3 1 12 0;
#X connect 5 0 4 0;
#X connect 6 0 7 0;
#X connect 7 0 12 1;
#X connect 8 0 10 0;
#X connect 8 1 9 0;
#X connect 9 0 10 1;
#X connect 10 0 11 0;
#X connect 11 0 13 1;
#X connect 12 0 8 0;
#X connect 13 0 5 0;
#X restore 158 170 pd set-time-random;
#X obj 172 510 r player-\$1-loop-record;
#X msg 172 531 loopRecord \$1;
#X connect 1 0 0 0;
#X connect 3 0 1 0;
#X connect 5 0 0 0;
#X connect 6 0 7 1;
#X connect 7 0 5 0;
#X connect 8 0 13 0;
#X connect 9 0 12 0;
#X connect 10 0 9 0;
#X connect 10 1 9 1;
#X connect 11 0 15 0;
#X connect 12 0 0 0;
#X connect 13 0 14 0;
#X connect 14 0 9 0;
#X connect 15 0 16 0;
#X connect 16 0 10 0;
#X connect 17 0 0 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 19 1 21 0;
#X connect 20 0 17 0;
#X connect 21 0 17 0;
#X connect 22 0 2 0;
#X connect 22 0 7 0;
#X connect 23 0 0 0;
#X connect 24 0 25 0;
#X connect 25 0 0 0;
#X restore 195 130 pd getSetTime;
#N canvas 430 213 595 497 algo-param-receives 0;
#X obj 55 333 list prepend parameters;
#X obj 55 357 list trim;
#X obj 88 253 t b f;
#X obj 138 253 t b f;
#X obj 188 253 t b f;
#X obj 238 253 t b f;
#X obj 288 253 t b f;
#X obj 55 441 outlet;
#X obj 338 253 t b f;
#X obj 388 253 t b f;
#X obj 438 253 t b f;
#X obj 488 253 t b f;
#X obj 55 309 pack f f f f f f f f f f;
#X obj 25 19 r player-\$1-algo-param-0;
#X obj 45 39 r player-\$1-algo-param-1;
#X obj 65 59 r player-\$1-algo-param-2;
#X obj 85 79 r player-\$1-algo-param-3;
#X obj 105 99 r player-\$1-algo-param-4;
#X obj 345 99 r player-\$1-algo-param-9;
#X obj 325 79 r player-\$1-algo-param-8;
#X obj 305 59 r player-\$1-algo-param-7;
#X obj 285 39 r player-\$1-algo-param-6;
#X obj 265 19 r player-\$1-algo-param-5;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 2 0 12 0;
#X connect 2 1 12 1;
#X connect 3 0 12 0;
#X connect 3 1 12 2;
#X connect 4 0 12 0;
#X connect 4 1 12 3;
#X connect 5 0 12 0;
#X connect 5 1 12 4;
#X connect 6 0 12 0;
#X connect 6 1 12 5;
#X connect 8 0 12 0;
#X connect 8 1 12 6;
#X connect 9 0 12 0;
#X connect 9 1 12 7;
#X connect 10 0 12 0;
#X connect 10 1 12 8;
#X connect 11 0 12 0;
#X connect 11 1 12 9;
#X connect 12 0 0 0;
#X connect 13 0 12 0;
#X connect 14 0 2 0;
#X connect 15 0 3 0;
#X connect 16 0 4 0;
#X connect 17 0 5 0;
#X connect 18 0 11 0;
#X connect 19 0 10 0;
#X connect 20 0 9 0;
#X connect 21 0 8 0;
#X connect 22 0 6 0;
#X restore 153 97 pd algo-param-receives;
#X obj 559 82 r masterBlockSize;
#X obj 559 103 pack f \$1;
#X msg 559 124 \; player-\$2-raw-output-plot resize \$1 \;;
#X obj 559 174 table player-\$1-raw-output-plot;
#X obj 81 448 bang~;
#X obj 24 493 tabwrite~ player-\$1-raw-output-plot;
#X obj 70 302 *~;
#X obj 322 127 r player-\$1-mute;
#X obj 322 149 swap 1;
#X obj 322 170 -;
#X obj 322 191 pack f 40;
#X obj 322 212 line~;
#N canvas 483 305 801 443 time-transmission 0;
#X obj 85 32 inlet;
#X obj 40 155 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 308 247 f;
#X obj 308 213 metro 1000;
#X obj 308 183 r player-\$1-compute;
#X msg 308 295 set \$1;
#X obj 85 53 t l l;
#X obj 64 188 list;
#X obj 346 91 unpack f f;
#X obj 64 249 s player-\$1-time-index-and-mu;
#X obj 64 155 r player-\$1-get-time-index-and-mu;
#X obj 308 315 s player-\$1-time-index-set;
#X text 417 217 as long as this player is computing \, update time
GUI at a lazy rate. [algo~] instance on client side keeps track of
its own time independently. chose to design this way so that client
can have a local plot of the signal \, and to reduce master >> client
messages. there may be drift over time with this design \, but a time
sync message should fix that., f 56;
#X connect 0 0 6 0;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 5 0 11 0;
#X connect 6 0 7 1;
#X connect 6 1 8 0;
#X connect 7 0 9 0;
#X connect 8 0 2 1;
#X connect 10 0 1 0;
#X connect 10 0 7 0;
#X restore 207 439 pd time-transmission;
#X obj 70 193 algo~, f 15;
#X obj 257 385 s player-\$1-params-per-algo;
#X text 273 334 sending this from the [algo~] instance in algo-player-client.pd
on the client side now. but we still need to send it locally for the
solo practice patch case.;
#N canvas 682 164 459 456 send-complete-settings 0;
#X obj 11 42 inlet;
#X obj 11 96 list split 1;
#X obj 111 156 list split 20;
#X obj 11 268 text search outputAlgorithms;
#X obj 61 197 list split 10;
#X obj 11 319 list append;
#X obj 111 238 list append;
#X obj 11 360 s player-\$1-complete-algo-settings;
#X text 146 27 The complete list is 26 elements long \; \; algo symbol
\; 20 params \; bit depth \; tempo \; time \; time loop start \; time
loop end \;;
#X text 248 231 Convert the algo symbol to its ID# \, grab the first
10 params only \, send all additional params. This creates a 16 element
list, f 27;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 1 2 0;
#X connect 2 0 4 0;
#X connect 2 1 6 1;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 7 0;
#X connect 6 0 5 1;
#X restore 313 303 pd send-complete-settings;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 4 0 20 0;
#X connect 5 0 20 0;
#X connect 6 0 20 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 11 0 12 0;
#X connect 13 0 3 0;
#X connect 13 0 12 0;
#X connect 14 0 15 0;
#X connect 15 0 16 0;
#X connect 15 1 16 1;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 18 0 13 1;
#X connect 20 0 13 0;
#X connect 20 1 19 0;
#X connect 20 2 21 0;
#X connect 20 3 23 0;
#X restore 50 42 pd sub-block;
#X obj 99 118 r player-\$1-asr-env;
#X obj 99 139 pack f 50;
#X obj 99 160 line~;
#X obj 50 143 *~;
#X obj 169 139 r player-\$1-asr-time;
#N canvas 490 321 527 393 reverb 0;
#X obj 44 55 inlet~;
#X obj 124 183 rev3~ 100 85 3000 20;
#X obj 44 336 outlet~;
#X obj 319 111 r player-\$1-rvb-xover;
#X obj 329 131 r player-\$1-rvb-damping;
#X obj 239 21 r player-\$1-wet;
#X obj 309 91 r player-\$1-rvb-liveness;
#X obj 44 315 +~;
#X obj 44 258 *~;
#X obj 170 223 r player-\$1-dry;
#X obj 170 334 pack f 40;
#X obj 170 355 line~;
#X obj 170 244 moses 41;
#X obj 170 265 t b;
#X obj 170 307 dbtorms;
#X msg 170 286 0;
#X obj 239 41 moses 41;
#X obj 239 62 t b;
#X msg 239 83 0;
#X obj 239 104 * 1;
#X connect 0 0 1 0;
#X connect 0 0 8 0;
#X connect 1 0 7 1;
#X connect 3 0 1 4;
#X connect 4 0 1 5;
#X connect 5 0 16 0;
#X connect 6 0 1 3;
#X connect 7 0 2 0;
#X connect 8 0 7 0;
#X connect 9 0 12 0;
#X connect 10 0 11 0;
#X connect 11 0 8 1;
#X connect 12 0 13 0;
#X connect 12 1 14 0;
#X connect 13 0 15 0;
#X connect 14 0 10 0;
#X connect 15 0 14 0;
#X connect 16 0 17 0;
#X connect 16 1 19 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 19 0 1 2;
#X restore 50 190 pd reverb;
#N canvas 813 309 330 288 cloning 0;
#X obj 91 55 clone-req-abs 0 \$1;
#X obj 91 85 clone-req-abs 1 \$1;
#X obj 91 115 clone-req-abs 2 \$1;
#X obj 91 145 clone-req-abs 3 \$1;
#X obj 91 175 clone-req-abs 4 \$1;
#X obj 91 205 clone-req-abs 5 \$1;
#X restore 434 186 pd cloning;
#X connect 0 0 9 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 0 1;
#X connect 4 0 5 0;
#X connect 4 1 10 0;
#X connect 5 0 6 0;
#X connect 6 0 10 0;
#X connect 7 0 4 0;
#X connect 10 0 1 0;
#X connect 11 0 12 0;
#X connect 12 0 0 0;
#X connect 15 0 19 0;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 18 0 19 1;
#X connect 19 0 21 0;
#X connect 20 0 17 1;
#X connect 21 0 11 0;
