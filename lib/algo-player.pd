#N canvas 451 111 488 422 10;
#X obj 50 329 *~;
#X obj 199 189 dbtorms;
#X obj 199 211 pack f 40;
#X obj 199 233 line~;
#X obj 199 75 moses 41;
#X obj 199 97 t b;
#X msg 199 119 0;
#X obj 199 53 r player-\$1-gain;
#X text 314 81 \$1: player ID number;
#X obj 50 359 s~ player-\$1-output;
#X obj 199 160 min 100;
#X obj 50 118 hip~ 3;
#N canvas 1025 72 606 533 compressor 0;
#N canvas 0 50 450 250 (subpatch) 0;
#X array \$0-dynamic-curve 102 float 3;
#A 0 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92
93 94 95 95.95 96.8 97.55 98.2 98.75 99.2;
#X coords 0 100 102 0 202 200 1 0 0;
#X restore 289 32 graph;
#N canvas 194 61 600 997 parameters 0;
#X obj 366 32 inlet;
#X obj 487 83 s \$0-speed;
#X obj 366 222 s \$0-limit;
#X obj 392 198 s \$0-knee;
#X obj 415 174 s \$0-boost;
#X obj 439 147 s \$0-ratio;
#X obj 366 57 unpack 0 0 0 0 0 0;
#X obj 462 116 s \$0-thresh;
#X obj 50 91 r \$0-limit;
#X obj 61 116 r \$0-knee;
#X obj 70 143 r \$0-boost;
#X obj 96 196 r \$0-thresh;
#X obj 82 167 r \$0-ratio;
#X obj 50 224 b;
#X obj 50 249 del 0;
#X obj 50 274 t b b;
#X obj 50 324 until;
#X obj 50 349 f;
#X obj 87 351 + 1;
#X msg 99 325 0;
#X obj 50 374 t f f;
#X obj 24 870 tabwrite \$0-dynamic-curve;
#X obj 193 708 moses;
#X obj 240 706 r \$0-thresh;
#X obj 407 554 r \$0-ratio;
#X obj 407 579 f;
#X obj 407 604 / 100;
#X obj 18 808 +;
#X msg 225 734 0;
#X obj 193 765 expr ($f1-$f2)*$f3;
#X obj 18 833 max 0;
#X obj 407 629 - 1;
#X obj 48 404 +;
#X obj 218 361 r \$0-boost;
#X obj 193 452 r \$0-limit;
#X obj 151 455 f;
#X obj 151 480 -;
#X obj 48 429 t f b;
#X obj 327 428 r \$0-knee;
#X obj 188 535 +;
#X obj 144 535 -;
#X obj 23 569 moses;
#X obj 71 569 moses;
#X obj 102 601 b;
#X obj 195 611 r \$0-limit;
#X obj 102 626 f;
#X obj 302 829 expr $f4 - ($f2-$f1)*($f2-$f1)/(4*$f3);
#X obj 23 594 +;
#X msg 50 299 102;
#X obj 327 453 f;
#X obj 327 478 / 2;
#X connect 0 0 6 0;
#X connect 6 0 2 0;
#X connect 6 1 3 0;
#X connect 6 2 4 0;
#X connect 6 3 5 0;
#X connect 6 4 7 0;
#X connect 6 5 1 0;
#X connect 8 0 13 0;
#X connect 9 0 13 0;
#X connect 10 0 13 0;
#X connect 11 0 13 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 15 0 48 0;
#X connect 15 1 19 0;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 17 0 20 0;
#X connect 18 0 17 1;
#X connect 19 0 17 1;
#X connect 20 0 32 0;
#X connect 20 1 21 1;
#X connect 20 1 22 0;
#X connect 22 0 29 0;
#X connect 22 1 28 0;
#X connect 23 0 22 1;
#X connect 23 0 29 1;
#X connect 24 0 25 0;
#X connect 25 0 26 0;
#X connect 26 0 31 0;
#X connect 27 0 30 0;
#X connect 28 0 27 1;
#X connect 29 0 27 1;
#X connect 30 0 21 0;
#X connect 31 0 29 2;
#X connect 32 0 37 0;
#X connect 33 0 32 1;
#X connect 33 0 36 1;
#X connect 33 0 47 1;
#X connect 34 0 35 1;
#X connect 35 0 36 0;
#X connect 36 0 39 0;
#X connect 36 0 40 0;
#X connect 37 0 41 0;
#X connect 37 1 35 0;
#X connect 38 0 49 0;
#X connect 39 0 42 1;
#X connect 39 0 46 1;
#X connect 40 0 41 1;
#X connect 41 0 47 0;
#X connect 41 1 42 0;
#X connect 42 0 46 0;
#X connect 42 1 43 0;
#X connect 43 0 45 0;
#X connect 44 0 45 1;
#X connect 44 0 46 3;
#X connect 45 0 27 0;
#X connect 46 0 27 0;
#X connect 47 0 27 0;
#X connect 48 0 16 0;
#X connect 49 0 50 0;
#X connect 50 0 40 1;
#X connect 50 0 39 1;
#X connect 50 0 46 2;
#X restore 303 432 pd parameters;
#N canvas 354 210 617 518 run-compander 0;
#X obj 47 56 inlet~;
#X obj 83 134 slop~ 0 0 0 0 1e+09;
#X obj 160 32 r \$0-speed;
#X obj 160 57 f;
#X obj 160 82 / 10;
#X obj 83 98 abs~;
#X obj 111 252 tabread4~ \$0-dynamic-curve;
#X obj 80 294 -~;
#X obj 80 319 +~ 100;
#X obj 80 344 dbtorms~;
#X obj 81 222 rmstodb~;
#X obj 45 384 *~;
#X obj 45 409 outlet~;
#X text 145 288 "correct" the level by applying a gain calculated from
the difference between the measured and desired level, f 27;
#X connect 0 0 5 0;
#X connect 0 0 11 0;
#X connect 1 0 10 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 1 3;
#X connect 5 0 1 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 11 1;
#X connect 10 0 7 1;
#X connect 10 0 6 0;
#X connect 11 0 12 0;
#X restore 48 172 pd run-compander;
#X obj 48 193 outlet~;
#X obj 48 123 inlet~;
#X obj 303 362 loadbang;
#X msg 303 389 100 10 0 100 0 50;
#X connect 2 0 3 0;
#X connect 4 0 2 0;
#X connect 5 0 6 0;
#X connect 6 0 1 0;
#X restore 50 140 pd compressor;
#N canvas 571 392 706 288 time-sync 0;
#X obj 91 55 time-sync-req-abs 0 \$1;
#X obj 91 85 time-sync-req-abs 1 \$1;
#X obj 91 115 time-sync-req-abs 2 \$1;
#X obj 91 145 time-sync-req-abs 3 \$1;
#X obj 91 175 time-sync-req-abs 4 \$1;
#X obj 91 205 time-sync-req-abs 5 \$1;
#X text 293 55 Need to do some testing to see if time request "get"
from player A is only getting to player B for a "set". Is there crosstalk
going on here?;
#X text 293 135 Also: should probably make a method to set x->x_sampIdx
in [outputAlgo~] \, and set it to 0.0. An alternative is to switch
interpolation off (which sets x->x_mu to 0.0) \, and then back on again
in the next block.;
#X restore 314 156 pd time-sync;
#N canvas 316 108 450 300 tempo-sync 0;
#X obj 91 55 tempo-sync-req-abs 0 \$1;
#X obj 91 85 tempo-sync-req-abs 1 \$1;
#X obj 91 115 tempo-sync-req-abs 2 \$1;
#X obj 91 145 tempo-sync-req-abs 3 \$1;
#X obj 91 175 tempo-sync-req-abs 4 \$1;
#X obj 91 205 tempo-sync-req-abs 5 \$1;
#X restore 314 126 pd tempo-sync;
#N canvas 179 98 842 570 sub-block 0;
#X obj 396 78 r masterBlockSize;
#X msg 396 99 set \$1 1 1;
#X obj 396 120 block~ 2048 1 1;
#X obj 70 380 outlet~;
#X obj 70 253 outputAlgo~;
#N canvas 994 151 476 524 settings 0;
#X obj 64 50 r player-\$1-algo-select;
#X msg 64 71 algoChoice \$1;
#X msg 126 129 bitDepth \$1;
#X msg 190 191 tempo \$1;
#X obj 77 402 outlet;
#X msg 235 280 interpolate \$1;
#X msg 290 333 compute \$1;
#X obj 290 310 r player-\$1-compute;
#X obj 126 105 r player-\$1-bitDepth;
#X obj 190 168 r player-\$1-tempo;
#X obj 235 257 r player-\$1-interpolation;
#X msg 275 476 print;
#X obj 275 430 r all-player-print;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 4 0;
#X connect 3 0 4 0;
#X connect 5 0 4 0;
#X connect 6 0 4 0;
#X connect 7 0 6 0;
#X connect 8 0 2 0;
#X connect 9 0 3 0;
#X connect 10 0 5 0;
#X connect 11 0 4 0;
#X connect 12 0 11 0;
#X restore 70 62 pd settings;
#N canvas 35 23 639 389 getSetTime 0;
#X obj 163 288 outlet;
#X msg 219 196 getTimeIndex;
#X msg 97 77 setTimeIndex \$1;
#X obj 97 52 r player-\$1-set-time-index;
#X obj 244 229 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 269 224 r player-\$1-get-interp-mu;
#X msg 269 249 getInterpMu;
#X obj 65 53 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 137 108 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 159 108 r player-\$1-set-interp-mu;
#X msg 159 133 setInterpMu \$1;
#X obj 219 169 bang~;
#X text 267 169 always poll time so that it can be stored on client
;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 2 0;
#X connect 3 0 7 0;
#X connect 5 0 6 0;
#X connect 5 0 4 0;
#X connect 6 0 0 0;
#X connect 9 0 10 0;
#X connect 9 0 8 0;
#X connect 10 0 0 0;
#X connect 11 0 1 0;
#X restore 181 207 pd getSetTime;
#X obj 290 304 s player-\$1-interp-mu;
#N canvas 430 213 595 497 algo-param-receives 0;
#X obj 55 333 list prepend parameters;
#X obj 55 357 list trim;
#X obj 88 253 t b f;
#X obj 138 253 t b f;
#X obj 188 253 t b f;
#X obj 238 253 t b f;
#X obj 288 253 t b f;
#X obj 55 441 outlet;
#X obj 338 253 t b f;
#X obj 388 253 t b f;
#X obj 438 253 t b f;
#X obj 488 253 t b f;
#X obj 55 309 pack f f f f f f f f f f;
#X obj 25 19 r player-\$1-algo-param-0;
#X obj 45 39 r player-\$1-algo-param-1;
#X obj 65 59 r player-\$1-algo-param-2;
#X obj 85 79 r player-\$1-algo-param-3;
#X obj 105 99 r player-\$1-algo-param-4;
#X obj 345 99 r player-\$1-algo-param-9;
#X obj 325 79 r player-\$1-algo-param-8;
#X obj 305 59 r player-\$1-algo-param-7;
#X obj 285 39 r player-\$1-algo-param-6;
#X obj 265 19 r player-\$1-algo-param-5;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 2 0 12 0;
#X connect 2 1 12 1;
#X connect 3 0 12 0;
#X connect 3 1 12 2;
#X connect 4 0 12 0;
#X connect 4 1 12 3;
#X connect 5 0 12 0;
#X connect 5 1 12 4;
#X connect 6 0 12 0;
#X connect 6 1 12 5;
#X connect 8 0 12 0;
#X connect 8 1 12 6;
#X connect 9 0 12 0;
#X connect 9 1 12 7;
#X connect 10 0 12 0;
#X connect 10 1 12 8;
#X connect 11 0 12 0;
#X connect 11 1 12 9;
#X connect 12 0 0 0;
#X connect 13 0 12 0;
#X connect 14 0 2 0;
#X connect 15 0 3 0;
#X connect 16 0 4 0;
#X connect 17 0 5 0;
#X connect 18 0 11 0;
#X connect 19 0 10 0;
#X connect 20 0 9 0;
#X connect 21 0 8 0;
#X connect 22 0 6 0;
#X restore 143 155 pd algo-param-receives;
#X obj 161 390 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 185 389 r player-\$1-get-time-index;
#X obj 185 423 f;
#X obj 185 444 s player-\$1-time-index;
#X obj 405 423 f;
#X obj 405 389 metro 1000;
#X obj 405 446 pack f \$1;
#X obj 405 502 s client-netsend-data-hub;
#X msg 405 478 send \$1 player-\$2-current-time-index;
#X obj 405 359 r player-\$1-compute;
#X text 491 408 as long as this player is computing \, update time
on client at a lazy rate, f 27;
#X obj 559 82 r masterBlockSize;
#X obj 559 103 pack f \$1;
#X msg 559 124 \; player-\$2-raw-output-plot resize \$1 \;;
#X obj 559 174 table player-\$1-raw-output-plot;
#X obj 81 448 bang~;
#X obj 24 493 tabwrite~ player-\$1-raw-output-plot;
#X obj 70 302 *~;
#X obj 301 156 r player-\$1-mute;
#X obj 301 178 swap 1;
#X obj 301 199 -;
#X obj 301 220 pack f 40;
#X obj 301 241 line~;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 4 0 26 0;
#X connect 4 1 11 1;
#X connect 4 1 13 1;
#X connect 4 2 7 0;
#X connect 5 0 4 0;
#X connect 6 0 4 0;
#X connect 8 0 4 0;
#X connect 10 0 9 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 13 0 15 0;
#X connect 14 0 13 0;
#X connect 15 0 17 0;
#X connect 17 0 16 0;
#X connect 18 0 14 0;
#X connect 20 0 21 0;
#X connect 21 0 22 0;
#X connect 24 0 25 0;
#X connect 26 0 3 0;
#X connect 26 0 25 0;
#X connect 27 0 28 0;
#X connect 28 0 29 0;
#X connect 28 1 29 1;
#X connect 29 0 30 0;
#X connect 30 0 31 0;
#X connect 31 0 26 1;
#X restore 50 42 pd sub-block;
#X connect 0 0 9 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 0 1;
#X connect 4 0 5 0;
#X connect 4 1 10 0;
#X connect 5 0 6 0;
#X connect 6 0 10 0;
#X connect 7 0 4 0;
#X connect 10 0 1 0;
#X connect 11 0 12 0;
#X connect 12 0 0 0;
#X connect 15 0 11 0;
