#N canvas 893 402 786 513 10;
#X text 401 402 \$1: player ID number;
#X obj 542 127 r masterBlockSize;
#X msg 542 148 set \$1 1 1;
#X obj 542 169 block~ 2048 1 1;
#N canvas 481 165 741 605 settings 0;
#X obj 168 159 r player-\$1-algo-select;
#X msg 230 277 bitDepth \$1;
#X msg 294 339 tempo \$1;
#X obj 64 522 outlet;
#X msg 465 360 interpolate \$1;
#X msg 520 413 compute \$1;
#X obj 520 390 r player-\$1-compute;
#X obj 230 253 r player-\$1-bitDepth;
#X obj 294 316 r player-\$1-tempo;
#X obj 465 337 r player-\$1-interpolation;
#X msg 392 532 print;
#X obj 392 486 r all-player-print;
#X msg 64 62 getAlgoSettings;
#X obj 64 39 r player-\$1-get-algo-settings;
#X obj 168 201 list prepend algo;
#X obj 168 222 list trim;
#X obj 168 180 text get outputAlgorithms;
#X obj 293 376 r player-\$1-algo-direct;
#X msg 293 397 algo \$1;
#X obj 114 109 r player-\$1-save-preset;
#X msg 114 132 save \$1;
#X text 279 90 NOTE: when using a client connected to master on the
same machine via loopback address \, this save command will be issued
to the client's [algo~] instance as well as the master's [algo~] instance.
so far this doesn't seem to cause problems.;
#X connect 0 0 16 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 4 0 3 0;
#X connect 5 0 3 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X connect 8 0 2 0;
#X connect 9 0 4 0;
#X connect 10 0 3 0;
#X connect 11 0 10 0;
#X connect 12 0 3 0;
#X connect 13 0 12 0;
#X connect 14 0 15 0;
#X connect 15 0 3 0;
#X connect 16 0 14 0;
#X connect 17 0 18 0;
#X connect 18 0 3 0;
#X connect 19 0 20 0;
#X connect 20 0 3 0;
#X restore 77 93 pd settings;
#N canvas 564 83 754 594 getSetTime 0;
#X obj 67 443 outlet;
#X msg 348 363 getTimeIndex;
#X obj 67 30 r player-\$1-set-time-index;
#X obj 35 31 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 348 336 bang~;
#X text 396 336 always poll time so that it can be stored on client
;
#X obj 214 100 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 246 99 r player-\$1-set-time-random;
#X msg 246 124 setTimeRand;
#X msg 67 95 setTimeIndex \$1 \$2;
#X obj 157 51 r player-\$1-set-interp-mu;
#X obj 67 51 pack f f;
#X obj 346 155 r player-\$1-loop-point-start;
#X obj 346 276 pack f f;
#X obj 426 246 t b f;
#X obj 426 185 r player-\$1-loop-point-end;
#X msg 346 310 setTimeLoopPoints \$1 \$2;
#X obj 346 176 * 60;
#X obj 346 197 * 44100;
#X obj 426 206 * 60;
#X obj 426 227 * 44100;
#X msg 344 490 timeDirection \$1;
#X obj 344 409 r player-\$1-time-reverse;
#X obj 344 430 select 0 1;
#X msg 344 451 1;
#X msg 394 451 -1;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 2 0 11 0;
#X connect 4 0 1 0;
#X connect 7 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 0 0;
#X connect 9 0 0 0;
#X connect 10 0 11 1;
#X connect 11 0 9 0;
#X connect 12 0 17 0;
#X connect 13 0 16 0;
#X connect 14 0 13 0;
#X connect 14 1 13 1;
#X connect 15 0 19 0;
#X connect 16 0 0 0;
#X connect 17 0 18 0;
#X connect 18 0 13 0;
#X connect 19 0 20 0;
#X connect 20 0 14 0;
#X connect 21 0 0 0;
#X connect 22 0 23 0;
#X connect 23 0 24 0;
#X connect 23 1 25 0;
#X connect 24 0 21 0;
#X connect 25 0 21 0;
#X restore 202 161 pd getSetTime;
#N canvas 430 213 595 497 algo-param-receives 0;
#X obj 55 333 list prepend parameters;
#X obj 55 357 list trim;
#X obj 88 253 t b f;
#X obj 138 253 t b f;
#X obj 188 253 t b f;
#X obj 238 253 t b f;
#X obj 288 253 t b f;
#X obj 55 441 outlet;
#X obj 338 253 t b f;
#X obj 388 253 t b f;
#X obj 438 253 t b f;
#X obj 488 253 t b f;
#X obj 55 309 pack f f f f f f f f f f;
#X obj 25 19 r player-\$1-algo-param-0;
#X obj 45 39 r player-\$1-algo-param-1;
#X obj 65 59 r player-\$1-algo-param-2;
#X obj 85 79 r player-\$1-algo-param-3;
#X obj 105 99 r player-\$1-algo-param-4;
#X obj 345 99 r player-\$1-algo-param-9;
#X obj 325 79 r player-\$1-algo-param-8;
#X obj 305 59 r player-\$1-algo-param-7;
#X obj 285 39 r player-\$1-algo-param-6;
#X obj 265 19 r player-\$1-algo-param-5;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 2 0 12 0;
#X connect 2 1 12 1;
#X connect 3 0 12 0;
#X connect 3 1 12 2;
#X connect 4 0 12 0;
#X connect 4 1 12 3;
#X connect 5 0 12 0;
#X connect 5 1 12 4;
#X connect 6 0 12 0;
#X connect 6 1 12 5;
#X connect 8 0 12 0;
#X connect 8 1 12 6;
#X connect 9 0 12 0;
#X connect 9 1 12 7;
#X connect 10 0 12 0;
#X connect 10 1 12 8;
#X connect 11 0 12 0;
#X connect 11 1 12 9;
#X connect 12 0 0 0;
#X connect 13 0 12 0;
#X connect 14 0 2 0;
#X connect 15 0 3 0;
#X connect 16 0 4 0;
#X connect 17 0 5 0;
#X connect 18 0 11 0;
#X connect 19 0 10 0;
#X connect 20 0 9 0;
#X connect 21 0 8 0;
#X connect 22 0 6 0;
#X restore 160 128 pd algo-param-receives;
#X obj 454 227 r masterBlockSize;
#X obj 454 248 pack f \$1;
#X msg 454 269 \; player-\$2-raw-output-plot resize \$1 \;;
#X obj 454 319 table player-\$1-raw-output-plot;
#X obj 134 367 bang~;
#X obj 77 412 tabwrite~ player-\$1-raw-output-plot;
#X obj 77 333 *~;
#X obj 329 158 r player-\$1-mute;
#X obj 329 180 swap 1;
#X obj 329 201 -;
#X obj 329 222 pack f 40;
#X obj 329 243 line~;
#X obj 77 224 algo~, f 12;
#X text 187 18 this version of the algo player exists to plot signal
on the remote client. it could be further developed to get information
from [algo~] outlets so that data updates from master to client are
no longer needed. updating of numAlgoParams is a good candidate for
this.;
#X obj 179 322 s player-\$1-params-per-algo;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 4 0 19 0;
#X connect 5 0 19 0;
#X connect 6 0 19 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 11 0 12 0;
#X connect 13 0 12 0;
#X connect 14 0 15 0;
#X connect 15 0 16 0;
#X connect 15 1 16 1;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 18 0 13 1;
#X connect 19 0 13 0;
#X connect 19 2 21 0;
